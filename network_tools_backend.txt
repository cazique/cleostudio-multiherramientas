
# ==================== A칌ADIR ESTOS IMPORTS AL INICIO ====================
import re
import dns.resolver

# ==================== A칌ADIR ESTO A TOOL_CATEGORIES ====================
TOOL_CATEGORIES.update({
    'dns_tools': {
        'name': 'DNS Tools',
        'icon': '游깷',
        'description': 'Herramientas de diagn칩stico DNS',
        'tools': [
            {'id': 'mx_lookup', 'name': 'MX Lookup', 'description': 'Verificar registros MX'},
            {'id': 'dns_lookup', 'name': 'DNS Lookup', 'description': 'Consulta DNS completa'},
            {'id': 'reverse_dns', 'name': 'Reverse DNS', 'description': 'IP a Dominio'},
            {'id': 'whois_lookup', 'name': 'WHOIS Lookup', 'description': 'Info del dominio'}
        ]
    },
    'email_tools': {
        'name': 'Email Tools',
        'icon': '游닎',
        'description': 'Verificaci칩n de configuraci칩n email',
        'tools': [
            {'id': 'spf_check', 'name': 'SPF Check', 'description': 'Verificar registro SPF'},
            {'id': 'dkim_check', 'name': 'DKIM Check', 'description': 'Verificar DKIM'},
            {'id': 'dmarc_check', 'name': 'DMARC Check', 'description': 'Verificar DMARC'},
            {'id': 'email_header', 'name': 'Email Header', 'description': 'Analizar headers'}
        ]
    }
})

# ==================== MX LOOKUP ====================

@app.route('/mx-lookup')
@login_required
def mx_lookup_page():
    return render_template('mx_lookup.html', theme=current_user.theme)

@app.route('/api/mx-lookup', methods=['POST'])
@login_required
def mx_lookup_api():
    try:
        domain = (request.form.get('domain') or '').strip()
        if not domain:
            return jsonify({'success': False, 'error': 'Dominio requerido'}), 400

        domain = re.sub(r'^https?://(www\.)?', '', domain).split('/')[0].rstrip('.')
        if not re.match(r'^[A-Za-z0-9.-]+\.[A-Za-z]{2,}$', domain):
            return jsonify({'success': False, 'error': 'Dominio inv치lido'}), 400

        resolver = dns.resolver.Resolver()
        resolver.timeout = 3.0
        resolver.lifetime = 5.0

        answers = resolver.resolve(domain, 'MX')
        mx_records = [
            {'priority': r.preference, 'server': str(r.exchange).rstrip('.')}
            for r in answers
        ]
        mx_records.sort(key=lambda x: x['priority'])

        return jsonify({'success': True, 'domain': domain, 'mx_records': mx_records, 'total': len(mx_records)})

    except dns.resolver.NXDOMAIN:
        return jsonify({'success': False, 'error': 'Dominio no existe'}), 404
    except dns.resolver.NoAnswer:
        return jsonify({'success': False, 'error': 'Sin registros MX'}), 404
    except dns.resolver.NoNameservers:
        return jsonify({'success': False, 'error': 'Servidores DNS no responden'}), 502
    except dns.resolver.LifetimeTimeout:
        return jsonify({'success': False, 'error': 'Tiempo de espera agotado'}), 504
    except Exception as e:
        return jsonify({'success': False, 'error': str(e)}), 500
